---
- name: the main playbook to be executed 

  vars_files:
    - vars_defaults.yml
    - vars_aws_config.yml
    # HOST_TO_REPLACE: 

  hosts: "{{HOST_TO_REPLACE}}"
  become: true

  tasks:
    # STEP-1: to save the groups of target host to a json file.
    # block local machine start 
   - name: block executing in local machine as un-privileged user
     block:
     - name: copy the groups the host belongs to a json file in local machine 
       copy:
         content: "{ \"hosts_group\" : {{  BELONG_TO_GROUPS | to_json }} }"
         dest: "{{  OUTPUT_DIRECTORY  }}/groups.json"
     - debug:
         msg: "the ouput saved is { \"hosts_group\" : {{  BELONG_TO_GROUPS | to_json }} }" 
     connection: local
     become: False
     run_once: True 
     rescue:
       - debug:
           msg: 'I caught an error, can do stuff here to fix it, :-)'
    
    # block ends 

    # STEP-2: get the configuration and keys to the target ec2 instance 
    # block to install dependencies for aws in remote host  
   - name: block executing in remote machine as privileged user
     block:
     - name: check/install python3 and pip on the server
       apt:
         update_cache: yes
         state: present 
         name: [python3, python3-pip]

     - name: install boto3 using pip 
       pip: 
         name: boto3
         state: present

      



...